package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var __0_init_down_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func _0_init_down_sql() ([]byte, error) {
	return bindata_read(
		__0_init_down_sql,
		"0_init.down.sql",
	)
}

var __0_init_up_sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x7d\x8b\xdb\x36\x18\xff\x3f\x90\xef\xf0\x10\x0a\xb6\x87\x0b\xeb\x31\x28\x4b\xe9\x41\xc8\x7c\xb7\xb0\x9b\xb3\x39\xb9\xbd\x30\x86\x51\x6c\x25\xa7\x46\x96\x73\x96\xdc\x6b\xd6\xf6\xbb\x0f\x59\x7e\x91\x9d\x3a\xc9\xdd\x9c\x6c\x8c\xf3\x7f\xb6\xa4\xe7\xfd\xf9\xfd\x1e\x2b\x48\x30\x12\x18\x04\x5a\x50\x0c\x83\x94\xe3\x64\xd0\xef\x99\xfd\x1e\x00\x80\x7c\xf3\x49\x08\xf9\xb3\x20\x2b\xc2\x84\x5a\x92\x4f\x10\x33\x2e\x12\x44\x98\x50\x3b\x37\xeb\x6a\x4d\x3e\x9b\x84\x44\x28\xd9\xc2\x1a\x6f\xed\x5c\x60\x5a\x49\xdb\x7d\x7d\xec\xc3\x62\x01\x2c\xa5\x34\x17\xae\x3c\x09\xfd\xc5\x56\xb3\xf6\xe9\xc2\x77\x05\x23\x25\x4d\x90\x08\x73\x81\xa2\x0d\x3c\x10\x71\x17\xa7\x22\xfb\x02\x7f\xc5\x0c\x43\x88\x97\x28\xa5\x02\x4c\x16\x3f\x98\x16\x20\x7d\xcd\x48\x45\x60\x58\x4d\xab\xf1\x72\x89\x03\x41\xde\x63\x3f\xcc\xf2\xd0\xad\x70\x16\x2a\xb1\x70\xd0\xf2\xc7\x85\x84\x70\x1f\x65\x56\xab\x95\x45\x1c\x53\x8c\xd8\x93\x63\x9d\x5b\x5d\x79\x28\x92\x14\x5b\x85\x13\x11\x22\xb4\xda\x2c\xf0\x87\xa7\x67\x75\xa7\x68\x18\x8a\x74\xdf\xbb\x15\x2e\xd0\x8a\x37\x84\xff\xf1\x67\x17\xc2\x95\xf8\xf1\xd4\x9d\xcd\xbd\xd1\xc4\x9d\xc3\x72\xed\x67\x2d\x98\x97\xea\x62\x5b\x75\xe2\xd5\xd4\x73\x26\xd7\x2e\xfc\xe0\xfc\x0e\x66\xd5\x23\x56\xbd\x57\x3d\xe7\xca\xf1\x1c\x77\xec\xcc\x72\x10\x00\x33\xef\x7e\xab\xdf\xb3\xde\x48\x95\x39\x52\xa4\x8c\xdc\xa7\x18\x08\x0b\xf1\x07\xd5\xf7\x59\x82\xfc\x54\x7d\x89\x59\x29\x20\xfb\x5e\x3b\x9b\xa3\x4c\x12\x53\xec\x8b\xed\x06\x57\x50\x53\x7e\xf2\xbf\x00\x09\x7b\x80\xa7\x3a\x77\x18\x7d\x1a\x7d\x5c\x7f\xba\x6d\xbc\x46\x59\x35\x54\x75\x5a\x64\x51\x4a\x05\xd9\x50\xec\x23\xce\xc9\x8a\x45\x98\x09\xee\x23\x4a\xe3\x07\x1c\x76\xd5\x98\xb9\x2a\xbe\xe5\x02\x47\x7e\x84\x18\x5a\xe1\x66\x9a\x3a\x52\xb5\xaf\xda\x64\xb2\xb3\x5c\xcb\xf0\xea\x05\x57\x15\x14\x98\x72\xad\xad\xe8\x1a\xf5\x76\x14\xb5\x65\x3b\x8f\x2f\xae\x67\xf6\xf9\x7f\xb1\xcf\x49\x09\xa2\x81\x7a\xaa\x68\xfe\x0d\xf2\xc8\x0c\x29\xda\xab\x85\x3b\x74\x63\xdb\xd9\xa3\xdc\xd5\x38\x60\xb7\xaa\x3d\x03\x67\xe9\xbc\x53\xc1\x64\x03\x0d\xaa\x05\x99\x8d\x43\x88\xa0\xed\x7e\x34\x38\xc0\x29\x01\x02\x4e\x0d\x12\x27\x50\x50\x07\x8a\x43\x0a\x1e\x17\x9e\x06\x58\xc0\xa9\x01\xa3\xc1\x2c\xd0\x41\xae\xeb\xd1\x6a\xfc\x95\x75\xaf\xa0\x81\x3c\x70\x16\xf4\xd1\xfa\x49\xbe\xee\xc3\xa0\x43\xf0\x53\x6d\x6b\x05\x1d\x4d\x9b\x0c\x67\x8b\xb6\x0a\x4d\x5a\xb4\x35\x61\xe7\x18\x7d\xe7\x86\xbb\x40\x90\x98\x55\x50\xa7\xf1\x99\x4c\xea\x1e\x80\xcb\x0e\xfa\x9b\xf5\xfe\x49\xba\x23\x24\xd8\xe3\x01\x4f\x17\xef\x70\x20\x9e\xe0\x42\x7e\xf2\x3f\xe0\xc3\x06\x27\x11\xe1\xbc\x96\x89\xc6\xc2\x31\xa4\xa3\xed\x7e\x26\x9d\x67\xd2\x39\x23\xe9\x28\x34\xa8\xed\xe8\x76\x14\xce\x7b\xf5\xe4\x0a\xf4\x28\x75\xd8\x0e\x31\x0b\x89\x8c\x50\x45\x9c\xef\x78\xcc\x16\x9d\x59\xbf\x24\x98\x86\x75\x56\xfe\xa7\x9c\xbc\x9f\x8f\x35\xa8\x39\x03\x1f\x6b\xda\x54\xa5\xb5\xe8\x53\x8b\x07\xfe\x3e\xf2\x5a\x55\x37\x01\xc7\xa8\xcc\x4b\xa3\x45\x67\xbe\x7a\x40\x69\x51\xbf\x07\xb4\x9e\x7c\x10\x28\x48\x68\xe2\xce\x1c\x6f\x0e\x13\x77\x3e\x6d\xfb\x27\xb3\x33\x26\xb5\xf7\xde\x20\xd9\x8d\x4b\x1f\xab\xdf\x9b\x39\x37\xce\x78\x0e\xaf\x6c\x30\x6e\x39\x4e\xc0\x8b\x29\x36\x6c\x58\x22\xca\xb1\x0d\x12\x95\xfa\xbd\x5f\xbf\x77\x3c\x07\xdc\xe9\x1c\x9c\xdf\x26\xb3\xf9\xcc\x2c\x0e\xc1\x95\x37\xfd\xb1\x76\x61\xa3\xb6\x66\x9c\xfe\x56\x97\x78\x26\x37\x2e\x74\x37\x6c\xb8\xa6\xf1\x02\x51\x43\xf9\xd1\x9d\x37\xa5\x60\xe5\xd5\xd8\x73\x46\x73\x07\xa6\x1e\x78\xce\x4f\x37\xa3\xb1\x03\x57\xb7\xee\x78\x3e\x99\xba\xb0\xc2\x6a\x24\xf5\x75\x17\x4d\x0b\x3c\x67\x7e\xeb\xb9\xb3\x72\x44\x18\xcd\xfa\xbd\x17\x2f\x4a\x37\xf4\xdd\xfd\x5e\xd3\xac\xc2\x85\xdd\x28\x2b\x21\xb2\xaa\x6e\x46\xee\xf5\xed\xe8\xda\x81\xd9\xcf\x37\x8f\x33\x72\x95\xb9\x76\x72\x5b\xcb\x18\xee\xb1\xb9\xf5\x8e\x3a\x4d\x49\x98\xdf\x18\xaa\xa3\xda\x3d\xb5\x5c\xab\x4d\x6e\x71\x02\x09\xde\x50\x14\x60\x58\xa6\x4c\xa1\xc9\x0a\x33\x9c\x20\x81\xfd\x35\x4f\xa5\x93\x39\xef\x62\x91\x26\x8c\x43\x70\x87\x12\xf3\xe2\x75\xfe\x95\x22\xb6\x4a\xd1\x0a\x03\xbf\xa7\xfd\x1e\xe2\xca\x60\x8e\xa9\x04\x08\x9e\x2e\xb8\x48\x08\x5b\x99\xf5\xae\xce\xa4\x65\x4a\x4d\x11\xfb\x99\xc0\x80\xc6\xc1\xda\x2f\xa7\x12\xd3\xb2\xc1\xd8\x6e\xb7\xdb\x28\x0a\xc3\xbb\xbb\x8b\x6f\x24\x7e\xa5\xdc\xb0\x76\x04\xe9\xcf\xa7\x4f\x50\x0a\x4c\x10\x0b\xe3\xc8\xb4\xe0\x2b\x78\x85\xbf\xb5\xc1\xf8\xba\x78\x0e\x08\x91\x9a\xc1\xb0\xc1\x30\x2c\x5b\x76\xfe\xc5\x6b\x6b\x38\x2c\x9c\x7e\x23\xfd\xfb\x62\xb7\x96\xc8\x5f\xf4\x68\xbd\x6f\xe5\x8f\xa6\xd5\xef\xfd\x32\xba\xb9\x75\x66\x60\xbe\x6a\x69\xc5\xfd\xd5\x66\x83\xf1\xf1\x73\x1b\x5a\xd4\x51\xb9\x52\x65\x48\x79\xd9\xa1\x9d\x23\x35\xf6\xd0\x4e\x28\xe4\x68\x53\x54\xb1\x89\xb9\x3b\xd7\xdb\x50\x86\x41\x49\xb7\x8b\x69\xc4\xd6\x26\x87\x7a\x24\x4c\xbd\x59\x48\xa8\x21\xcd\x11\x20\x63\x43\x61\xae\x0d\xca\x55\x19\x25\x99\xe1\x01\x09\x07\x43\xf8\xa8\x92\x3d\x88\x37\x83\x21\x0c\xf0\xfd\x20\xe7\xab\x41\x36\x66\xc8\x6f\x1c\x17\xc6\x0f\xe4\xd2\xe7\x7e\xaf\x88\xf1\x9e\x1e\xc1\xef\x11\x4d\x65\x8f\xa0\x20\xc0\x9c\x67\x49\x33\x4b\x07\xd5\x44\x64\x43\x25\xba\xb8\xf0\x2c\xaf\x34\xd4\x7b\xa3\xb7\xf2\xc1\xf9\x88\xd6\xd2\x74\xbd\xbc\x04\x83\x84\x06\xbc\xbc\xbc\x04\x43\x9a\x85\x0d\x6b\x38\xcc\x07\xbe\xb7\x85\xc2\x5a\xcd\x4f\x3d\x30\xdb\x24\x64\x71\x31\x2c\x19\xee\xca\x7c\xa3\x3a\x3e\x72\xbf\x2b\x9d\x78\xab\x79\x68\x65\xad\xf1\x77\x00\x00\x00\xff\xff\x6d\x96\x8a\x31\x64\x1f\x00\x00")

func _0_init_up_sql() ([]byte, error) {
	return bindata_read(
		__0_init_up_sql,
		"0_init.up.sql",
	)
}

var _bindata_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x97\xcd\x8e\xeb\xc6\x11\x85\xd7\xe2\x53\x30\x02\x1c\x48\xc0\x60\xc2\xff\x1f\x03\x77\x63\x23\xdb\x2c\xb2\x4d\x05\x83\x26\xd9\x3d\x10\x72\x47\x9a\x2b\x69\xec\xf2\x0d\xfc\xee\xc1\xd7\x55\x82\x9d\xd8\xd9\x04\x59\x68\x24\x92\xcd\xea\x53\xa7\x4e\x9d\xea\x79\x0f\xeb\x3f\xc2\x6b\x2c\xdf\x4e\xaf\xd7\x70\x3f\x5d\xce\xb7\xa2\x38\xbd\xbd\x5f\xae\xf7\xf2\x50\xec\xf6\xcb\x4f\xf7\x78\xdb\x17\xbb\xfd\x7a\x79\x7b\xbf\xc6\xdb\xed\x4f\xaf\x5f\x4f\xef\xdc\x48\x6f\x77\xbe\x4e\x17\xfe\xde\xee\xd7\xd3\xf9\xf5\xb6\x2f\x8e\x45\x91\x3e\xce\x6b\xb9\x9c\xce\x5b\xb8\x87\x97\x6b\x0c\xdb\x81\x5f\xe5\xdf\xfe\x4e\xac\xa7\xf2\x1c\xde\x62\x69\xeb\x8f\xe5\xe1\x71\x37\x5e\xaf\x97\xeb\xb1\xfc\x67\xb1\x7b\xfd\x9a\xaf\xca\x6f\x3f\x95\x6c\xf5\xfc\x97\xf8\xe3\x5f\x63\xd8\xe2\xf5\x90\xb1\x70\xfd\xdd\x47\x4a\xf1\x9a\xc3\x1e\x8f\xc5\xee\x94\xf2\x0b\x7f\xf8\x54\x9e\x4f\x9f\x09\xb1\xbb\xc6\xfb\xc7\xf5\xcc\xe5\x53\x99\xde\xee\xcf\x7f\x26\x7a\x3a\xec\x09\x54\x7e\xf3\xe5\xdb\xf2\x9b\x1f\xf6\x86\x24\xef\x75\x2c\x76\x3f\x17\xc5\xee\x87\x70\x2d\x97\x8f\x54\xda\x3e\xb6\x49\xb1\x7b\x31\x38\x9f\xca\xd3\xe5\xf9\xfb\xcb\xfb\x4f\x87\x3f\x2e\x1f\xe9\xa9\x7c\xfd\x7a\x04\xeb\xf3\xf7\x9f\x2f\xb7\x78\x38\x16\xff\x3f\x18\xfe\xd6\xf2\x91\x9e\xbf\x03\xc9\xe1\xf8\x44\x88\xe2\xe7\xa2\x00\xe1\xcb\x4b\xf5\x72\x3a\x9f\xee\x2f\xdb\xe5\xc7\xf3\xcb\xed\xcb\xe7\xf2\x93\x73\x7b\xd8\x8b\xd6\x49\x74\x5a\x44\xab\x49\xb4\xaa\x7e\xff\x93\x92\x68\x55\xff\xfb\x75\xbe\xf7\x5f\xd6\xdb\x67\xff\x28\xed\x7f\xee\x7f\xf8\xdd\x32\x3e\xb2\xf8\xb5\x0e\x8a\xdd\xee\x37\xe8\x9f\x8a\xdd\x6e\x6f\xf7\x9e\xb9\xf7\x7c\xfb\xf2\x79\xff\x54\xec\x8e\xbf\xc9\xf7\xe3\xfd\x7f\xce\x36\xae\xa2\xfd\x24\x3a\x6e\xb6\x7e\x5b\x44\xdb\x41\xb4\x9e\xec\x79\x9b\x44\xe7\x4a\x34\xc2\x44\x25\x5a\xf3\x6e\x10\x5d\x06\xd1\x69\x14\xad\x16\xd1\xc8\x3b\xb5\x68\x33\x89\x76\x5c\xcf\xa2\x5d\x2d\xba\x12\x77\x15\x5d\x46\xd1\xa5\x12\x9d\x17\xd1\xa5\x15\x6d\x67\xd1\x85\xcf\x26\xda\x56\xa2\xd3\x20\xda\xd7\xa2\xc3\x2a\xda\xf4\xa2\x61\x14\xed\x06\xd1\x79\x10\x1d\x5b\xfb\xde\x56\xd1\x01\x7c\x83\x68\x1a\x44\x17\x72\x4b\xa2\xfd\x2c\x3a\x46\xd1\xb9\x16\x9d\x89\x17\x44\xd7\x59\x74\xdb\x44\xe7\xd5\x62\x4e\xab\x68\x6a\x45\xc7\x64\xb8\x43\x27\x1a\x47\xd1\xb4\x89\xa6\xd9\xbe\xeb\x28\xda\x2c\xa2\xdd\x64\x98\xea\xc6\x38\xa8\x3a\xd1\x3e\x88\xf6\xe4\x4d\x2c\xf0\xf0\x7e\x2b\x3a\x74\xa2\x9b\x73\x33\xff\x2a\x0e\xdc\x4e\x95\xe5\xce\xbe\xdd\x6c\x75\x60\x2f\xf2\x6f\x2a\xdb\x6b\x6d\x44\x27\x8f\x3f\x37\xa2\x5d\x32\x7e\x5b\xd6\x44\xc3\xd0\x75\xa2\xf3\x64\xfb\xb7\xf0\x3c\x1a\xdf\x43\x10\xed\xc8\x37\x1a\xaf\xc4\x61\x2d\x35\xd8\x66\x8b\x5d\x07\xd1\x81\x1a\x6f\xa2\x3d\x5c\x54\xb6\x17\x78\xa8\x33\x35\xe7\x83\x06\x56\xf2\x69\x4c\xfd\xcd\x2a\x1a\x7a\xd1\xb6\x13\xad\x47\xd1\x10\x45\xdb\x55\xb4\xf2\x1c\xd7\x5e\xb4\x1f\x2c\x17\x6a\x11\x7d\xbf\x11\x3d\xf4\xa2\x4d\x6b\x75\x04\x1f\xda\x21\x77\xea\x38\xd5\xa2\x81\x3d\x36\x8b\x47\xae\x63\xed\x7b\x8c\xa2\x4d\x23\x9a\xa8\x6b\x63\xb5\x62\x1f\x38\xef\x78\x77\x12\x9d\x47\xcb\x0f\x6c\xac\xe9\x88\x31\xb8\x46\x27\xfb\x0d\xb7\xe4\xb4\x6e\x56\xcb\xae\xf7\xbc\x27\xc3\x13\x16\xd1\x54\x8b\x8e\x70\x4f\x5d\x5a\xd3\xea\x16\x45\x87\xd6\x62\xad\xd4\xad\xb1\xda\x06\x38\xaa\x3c\x36\xba\xaf\xed\x9a\x67\xac\x59\x47\xd1\xa9\x37\xfe\xf3\xba\x24\x3a\x38\x3f\xec\x35\xf7\x86\xa1\xa6\xcf\x5a\xd3\xe2\x46\x2e\xad\xed\x87\x66\xfb\x45\xb4\x67\x9f\xd9\xf2\x43\x0b\x75\x67\xf7\x89\x5d\xb7\xa2\x75\x6d\xfc\x2c\x68\x2e\x58\x8d\xe8\xc7\xc9\xb9\x1b\x46\xd1\xd1\x7b\x67\x98\x4c\xbb\x53\x10\x1d\x59\x9f\xac\x5f\xea\xde\x74\x05\x76\x9e\xa1\x25\x70\x67\x97\xab\x2d\x06\xb5\xa0\x96\xe0\x4e\x93\xdd\xdf\x3a\xc3\x09\xa7\xf4\xec\x46\x6f\x3f\xee\xb5\xc6\x25\x1a\xe3\xfd\x66\xb3\x5a\x50\xab\x18\x4c\x53\xe4\x01\xb6\x08\xa7\xbd\xc5\x43\x0f\x0d\x7d\x3d\x1a\xa6\xb4\x8a\xc6\xca\xbe\x2b\x6a\x31\xd8\x5a\xb4\x94\xb5\x06\x4f\xa3\x68\xbb\x59\xef\xae\xc1\xb0\xc1\x2b\xba\xcb\x1a\x5e\x0d\x4b\xed\xfe\x46\x1f\xd1\x9b\xf8\x03\xb5\xc8\x3c\xb4\x56\x6b\xb4\x41\x8e\x78\x51\xdf\x98\x27\xe4\xda\xac\xc6\x61\xee\xfd\xc9\xfc\x8d\x7d\xaa\xd1\xf0\xa4\xd1\x3c\x67\x6a\x0c\x6b\xdf\xb9\x77\xce\x76\xbf\x99\x4d\x83\xe8\xb8\x8f\xd6\xb3\xf4\x67\x68\x5d\xaf\x8d\xe9\x00\xbc\xf8\x2d\xbc\x55\x83\xe5\x46\x8f\xf3\x0c\xbc\x68\x6b\x79\x4c\x1e\x3c\x6e\x31\x4f\x01\x1b\x1e\x37\x3a\x46\xf6\xa6\xcf\x47\xef\xf1\xec\x71\xf0\x4e\xad\x56\xf3\x51\x70\xb5\xbd\x63\xed\xcd\x03\xf0\x2e\x3c\xb7\x0b\xd6\xb3\x78\x06\xfb\x83\x0b\xce\xd7\x68\x3e\x8a\x4e\xd0\x2f\x35\x05\x47\x8c\xf6\x9c\xf7\xf0\x40\x78\xc9\x35\xf0\x7a\xb1\x0e\x6f\xcf\xbd\x12\x45\xe3\xa3\x57\x47\xcb\x0b\xbd\x81\x1b\x0c\xb1\xb6\x3a\xcf\xc1\x72\xa2\x0e\x0b\x1a\x4e\xa6\x71\x30\x2e\x8d\xd5\x8c\xdc\xd6\xc5\x34\x1f\x1d\x33\x9c\xa1\xe9\xda\x3d\x92\xda\xd3\xaf\x7c\xe2\x64\xbc\xa4\xde\xb0\xb1\x86\xd8\xf4\x26\x35\x99\x92\x68\x93\xcc\xdb\xd0\x2d\x3e\x86\x3f\x67\xfe\xd0\x77\x72\xdf\x9e\xcd\xb3\xf0\xae\x31\x88\x86\x60\xfd\x95\xa2\xf9\x58\xf6\x80\xc9\x7c\x8a\xda\x83\x3b\x78\xdf\xb2\x0f\xfd\x47\x9f\xe3\xb7\x70\x8c\x0e\xd0\x18\x5c\xb5\x93\x79\x13\xf3\x91\xb8\x68\x1b\x3f\x02\x0f\x9e\xba\xb8\x67\xac\xb5\x71\xc1\x33\xf6\x0c\x9e\x3f\x33\x67\xda\x7e\xf1\xc7\x50\x99\x9e\xe0\x19\xef\x26\xfe\x5a\x19\xae\x7c\xaa\xa1\x0e\x8e\x1b\x1d\x36\x0f\xcd\x55\x56\xc7\x5c\xeb\xd6\xe6\x3b\x73\x0c\x2f\x98\xa3\xeb\xd3\x63\x05\x8f\x15\x1c\x17\x3e\x84\x9f\xe0\xa1\x70\xc9\x6c\xc2\x1f\x98\x4f\xf4\x07\x3d\x36\x7a\x4d\xc1\x07\x8f\x78\xff\xc3\x53\x53\x67\xeb\x93\xcf\xa5\xac\x99\x68\xbe\xc2\x7a\xf0\x24\xef\x0b\x34\xcd\x19\x80\xdc\xeb\xcd\xe7\xcb\x62\xdc\xc3\x19\xfd\xc4\x7c\xaf\x7c\x36\xa2\x31\xfc\x12\xed\x0f\xb5\xf9\xc6\xa3\x67\xf8\x3d\xf9\x39\xa2\xab\x6c\x4e\xe5\x39\xdb\x1b\x1f\xf4\x19\x7d\x0f\xc7\xf4\x6d\x74\x4e\xe8\x41\x74\x88\x47\x81\x99\xfd\xd1\x18\x7a\xc8\xf8\x83\xcf\xbf\xce\x7c\x3e\xf7\x48\xed\xb3\x7d\x74\x3f\xaa\xcc\x23\xe0\x16\xcf\xeb\x9a\x5f\x7a\x9e\xf9\xc3\x3d\xf2\x87\x77\x6a\x84\xf7\xd3\x2b\xe8\x81\xb3\x10\x5e\xb3\x0e\xe6\xd3\x9c\xbb\xf0\x2e\xea\xf1\xa8\x3d\xbe\x3a\xbb\x1f\x6f\x8d\x79\x1c\x98\xa2\xcf\x17\xb4\x11\x26\x5b\x4f\x9f\x3c\xfa\x83\x9e\x1f\x3d\x9f\xd8\x19\x8f\xc9\xcf\x14\xd4\x90\x7c\xc8\x9b\x3d\xf1\x45\x70\xe0\x99\xf0\x95\x3d\x62\xf5\xfc\x26\xf3\xe2\xda\x71\xe0\x3f\x78\x59\xe3\x7d\x0a\xef\xa3\xcf\x48\x78\x83\x6b\xde\xcd\xf9\x25\xeb\x4d\x6a\x06\xc6\xd6\x67\x74\x9e\xab\x8b\xf5\x17\x3e\xc6\x19\x80\x7e\x06\x7f\x9e\xab\x8b\x69\x98\x78\xad\x73\x99\xcf\x6d\xbd\xcd\x39\x6a\xc0\xac\x0e\x8e\xad\x7b\x78\x72\x6f\x3c\xa1\x3b\xfa\x1b\x2d\x0c\xb3\x79\x63\xf6\xdf\xd1\x34\x44\xad\x46\x3f\xb3\xe4\x73\xee\x64\x3e\xc0\x4c\x83\x37\x3c\x90\xb3\x16\xfc\x30\xaf\xf1\x67\x70\xa0\x59\x66\x01\x75\xcc\x67\x5f\x9f\x7b\x8b\xcf\x12\x66\x11\x5a\xd8\x1e\xbd\xbc\x58\xae\x8f\x79\x85\xbe\xe0\x80\x1c\x72\x7d\xbc\x06\xf4\x13\x67\x5b\xce\xaa\x43\xb4\x35\xf4\x36\x3d\x0a\x17\xf4\x3c\xe7\xf8\xc1\xcf\xf7\x9c\x1d\x56\x3f\xbf\x3c\xfa\x3f\xcf\xf8\xe0\xb3\x35\x59\xbe\x19\xf7\xea\xf3\x6e\x35\xcd\x90\x1b\xf5\x01\x4f\xf3\x38\xf7\xcd\xc6\x63\xe3\xf3\x1a\x2f\x98\x9d\x6b\xce\x88\xf9\x9c\x34\x58\xdf\xc1\x33\x7d\x99\xbd\x7e\xb5\x1a\x51\x7b\xce\x08\xe4\x43\xcc\xd6\xcf\x01\xf8\x25\xbf\xc1\xbd\xe0\x69\x83\xcf\xdf\xc6\xe7\x95\xef\xbd\x3d\xce\xfb\xa3\x69\x01\x1f\x65\xd6\x6c\xae\x53\xce\x17\x9d\xff\xff\x40\x2e\xc4\xa9\x9d\x3f\x78\xa4\x1f\xf3\xbb\xad\x73\xd2\xda\x3c\xc1\x8b\xa3\xad\xfb\x57\x00\x00\x00\xff\xff\x0f\xce\x20\x70\x00\x10\x00\x00")

func bindata_go() ([]byte, error) {
	return bindata_read(
		_bindata_go,
		"bindata.go",
	)
}

var _generate_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xcf\x6e\xdb\x38\x10\xc6\xcf\xe4\x53\xcc\xea\x10\x50\x80\x23\x5d\x76\x2f\x01\x7c\xd8\xa6\x09\x10\x24\xf1\xa1\x69\xda\x43\x51\x04\xb4\x34\xa6\x89\x48\xa4\x31\xa4\x1d\xb8\x85\xdf\xbd\x20\x29\xc9\x76\x9c\x36\x2e\xda\xf8\x62\x68\xf4\x71\xbe\xdf\xfc\xa1\x16\xb2\x7a\x94\x0a\xa1\xd5\x8a\xa4\xd7\xd6\x38\xce\x75\xbb\xb0\xe4\x41\x70\x96\x29\xed\xe7\xcb\x69\x51\xd9\xb6\x54\xb6\x91\x46\x9d\x26\x21\x96\xfd\xff\xea\xdf\x8c\xb3\xa9\x36\xb5\xf4\x12\x8e\xd2\x97\xce\x2e\xa9\xc2\x52\xd9\x87\xee\x5c\xb6\xef\x44\xae\xfc\x86\x64\x1b\xab\xca\xc6\xaa\xf0\xd2\x21\xad\x90\xca\xa9\xa4\x3a\x46\x72\xce\xcb\x52\xd9\x33\x85\x06\x43\x56\x50\xf6\xb4\x67\x38\x5d\x3c\xaa\x9d\x72\xa0\xe0\xbc\xb2\xc6\xc5\x7a\x6e\xfb\xf0\xc7\xf5\x02\x21\xfd\xc6\x90\x0d\xe1\x8c\xb3\x6b\x5c\x0f\x8f\x9f\x90\x9c\xb6\x26\x48\x86\x84\x0f\xab\x14\x7c\x26\x7d\xaf\xc9\xaf\x53\xb6\xad\xb4\x0e\xc1\x48\x3b\x5b\x9a\x0a\x92\x18\x45\x65\x8d\xc1\x2a\x28\xee\x3c\x69\xa3\xc0\xc5\xbf\x1c\xbe\x73\xd6\x58\xa5\x90\xe0\x6c\x0c\x8d\x55\xc5\x67\xed\xe7\x22\x2f\xee\x3c\x89\xae\xf6\xe2\x1a\xd7\x37\x56\x05\xfe\x11\xec\x95\x93\x17\x37\xf1\xac\xc8\x39\x67\x2e\x64\xe8\x3a\x52\x7c\xc0\xd4\x71\xf1\xbf\x73\xe8\x27\xb2\x45\x27\xf2\x11\x67\x2c\x50\x09\x23\x5b\x1c\x08\xc4\x97\xaf\xd3\xb5\xc7\x11\x20\x91\xa5\x48\xc4\x18\xa1\x5f\x92\x81\x78\x3a\xca\x73\xce\xd8\x26\xe7\xac\x8e\xba\x5d\xab\x00\x7c\x65\x9c\x97\xa6\x42\xe1\x72\xce\xf4\x2c\x4a\xfe\x19\x83\xd1\x4d\x4c\x97\x2a\x2c\x2e\xa5\x97\x8d\xc8\x8b\x60\x70\x41\x24\x90\x28\x2f\x6e\x9d\x12\xd9\xa5\xd4\x0d\xd6\xe0\xed\x90\x35\xcb\x39\xdb\x70\xd6\x0e\x76\xdd\x32\x15\x13\x7c\x0a\x8e\x77\xb1\xbc\xc1\x37\xdb\x6e\x43\x36\x82\x7a\x04\xcf\x1b\xfe\xa7\x5c\x76\x81\x66\x67\xc5\x7a\xbe\x6e\x33\x46\x10\xe7\xbe\x85\x2d\xba\x3d\x12\x07\xbe\x27\x27\xfd\x53\x5f\xd1\x05\xd1\x44\x37\xfd\xe2\xfd\x26\xd7\x0c\x7d\x35\x87\x6a\x49\x84\xc6\x43\x87\xd3\xd3\xe9\x59\xe2\xfa\x59\xd2\x7b\x6d\xbc\x78\x61\xfb\x47\x7d\xa2\x24\x7b\x67\x6d\x23\x0e\x36\xbf\xab\x39\x49\x22\xd5\x79\x47\x31\xe8\x40\xbb\x24\xea\x81\x3a\x86\x2b\x33\xb3\x09\xe1\x38\x82\xd7\x01\xa2\x7f\xf7\xda\x28\x08\x37\x67\xa5\xf1\xe9\xbf\xe0\x1b\xda\x1d\x46\x72\xbf\x38\x9c\x46\x68\x4c\x17\x19\xef\x4f\xc4\x9e\xcf\xa5\x51\x98\xae\xc3\x01\xf7\xd1\xbd\x3b\xa6\x79\xcf\x86\x3b\xb1\x50\x25\xef\x56\xd6\x18\x5b\xc7\x36\xd8\xb8\x7d\x96\xdd\x39\xbe\x21\xcc\x76\xd3\xfa\xe6\x24\x9e\x30\xce\x17\xe6\xf9\xba\xc1\x71\xa8\x3b\xf3\xc4\x7a\x6f\x9c\x2f\xdf\xb9\x5f\x5e\xb9\xbf\x71\xa5\x40\xce\x3c\xd2\xf6\x0b\xd0\x6d\xf4\x5b\xb7\x60\xa8\x1c\xc2\xa7\x6d\x2a\x1d\xf6\x9a\x2c\xe7\x1b\xfe\x23\x00\x00\xff\xff\x17\x8b\x0a\x74\xcb\x07\x00\x00")

func generate_go() ([]byte, error) {
	return bindata_read(
		_generate_go,
		"generate.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"0_init.down.sql": _0_init_down_sql,
	"0_init.up.sql": _0_init_up_sql,
	"bindata.go": bindata_go,
	"generate.go": generate_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"0_init.down.sql": &_bintree_t{_0_init_down_sql, map[string]*_bintree_t{
	}},
	"0_init.up.sql": &_bintree_t{_0_init_up_sql, map[string]*_bintree_t{
	}},
	"bindata.go": &_bintree_t{bindata_go, map[string]*_bintree_t{
	}},
	"generate.go": &_bintree_t{generate_go, map[string]*_bintree_t{
	}},
}}
