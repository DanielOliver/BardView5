// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.8.3 DO NOT EDIT.
package api

// Defines values for PatchDocumentOp.
const (
	PatchDocumentOpAdd PatchDocumentOp = "add"

	PatchDocumentOpCopy PatchDocumentOp = "copy"

	PatchDocumentOpMove PatchDocumentOp = "move"

	PatchDocumentOpRemove PatchDocumentOp = "remove"

	PatchDocumentOpReplace PatchDocumentOp = "replace"

	PatchDocumentOpTest PatchDocumentOp = "test"
)

// Email defines model for Email.
type Email string

// The last modified time of this record
type LastModified string

// A JSONPatch document as defined by RFC 6902
type PatchDocument struct {
	// A string containing a JSON Pointer value.
	From *string `json:"from,omitempty"`

	// The operation to be performed
	Op PatchDocumentOp `json:"op"`

	// A JSON-Pointer
	Path string `json:"path"`

	// The value to be used within the operations.
	Value *map[string]interface{} `json:"value,omitempty"`
}

// The operation to be performed
type PatchDocumentOp string

// A 27 character string representing an unique id
type StringId string

// SystemTags defines model for SystemTags.
type SystemTags []string

// User defines model for User.
type User struct {
	Email      Email      `json:"email" validate:"required,email,min=1,max=512"`
	Name       string     `json:"name" validate:"required,min=1,max=512"`
	SystemTags SystemTags `json:"systemTags" validate:"required,max=64,dive,max=256"`
	UserTags   UserTags   `json:"userTags" validate:"required,max=64,dive,max=256"`
}

// UserGet defines model for UserGet.
type UserGet struct {
	// Embedded struct due to allOf(#/components/schemas/User)
	User `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	// The last modified time of this record
	LastModified LastModified `json:"lastModified"`
	UserId       int64        `json:"userId"`
	Version      int64        `json:"version"`
}

// UserPost defines model for UserPost.
type UserPost struct {
	// Embedded struct due to allOf(#/components/schemas/User)
	User `yaml:",inline"`
	// Embedded fields due to inline allOf schema
	UserId  *int64 `json:"userId,omitempty"`
	Version *int64 `json:"version,omitempty"`
}

// UserTags defines model for UserTags.
type UserTags []string

// UserId defines model for UserId.
type UserId int64

// UserGetOk defines model for UserGetOk.
type UserGetOk UserGet

// A JSONPatch document as defined by RFC 6902
type Patch PatchDocument

// PostUsersJSONBody defines parameters for PostUsers.
type PostUsersJSONBody UserPost

// PostUsersJSONRequestBody defines body for PostUsers for application/json ContentType.
type PostUsersJSONRequestBody PostUsersJSONBody

// PatchUsersUserIdJSONRequestBody defines body for PatchUsersUserId for application/json ContentType.
type PatchUsersUserIdJSONRequestBody Patch
