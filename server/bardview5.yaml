openapi: 3.0.3
# oapi-codegen -o bardview5.go -generate types bardview5.yaml
info:
  title: BardView5
  description: BardView5
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: localhost!
components:
  parameters:
    UserId:
      in: path
      name: userId
      schema:
        type: integer
        format: int64
  requestBodies:
    Patch:
      description: JsonPatch
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PatchDocument'
      required: true
  responses:
    UserGetOk:
      description: UserGet
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserGet'
    UserPostOk:
      content:
        application/json:
          schema:
            type: object
            properties:
              userId:
                type: integer
                format: int64
              version:
                type: integer
                format: int64
            required:
              - userId
              - version
      headers:
        ETag:
          schema:
            type: string
          description: Current version
        Location:
          schema:
            type: string
          description: Known Location
  schemas:
    PatchDocument:
      description: A JSONPatch document as defined by RFC 6902
      required:
        - "op"
        - "path"
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - "add"
            - "remove"
            - "replace"
            - "move"
            - "copy"
            - "test"
        path:
          type: string
          description: A JSON-Pointer
        value:
          type: object
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    StringId:
      type: string
      maxLength: 27
      minLength: 27
      example: 0ujsswThIGTUYm2K8FjOOfXtY1K
      title: String Id
      readOnly: true
      description: A 27 character string representing an unique id
    Created:
      type: string
      format: datetime
      readOnly: true
      description: The created time of this record
      title: Created
    LastModified:
      type: string
      format: datetime
      readOnly: true
      description: The last modified time of this record
      title: LastModified
    Email:
      type: string
      minLength: 1
      maxLength: 512
      example: test@test.com
      x-oapi-codegen-extra-tags:
        binding: "required,email,min=1,max=512"
    SystemTags:
      type: array
      maxItems: 64
      x-oapi-codegen-extra-tags:
        binding: "required,max=64,dive,max=256"
      items:
        type: string
        maxLength: 256
        example: Player
    UserTags:
      type: array
      maxItems: 64
      x-oapi-codegen-extra-tags:
        binding: "required,max=64,dive,max=256"
      items:
        type: string
        maxLength: 256
        example: LookingForPlayers
    User:
      type: object
      properties:
        name:
          type: string
          example: Arthur Dent
          maxLength: 512
          minLength: 1
          x-oapi-codegen-extra-tags:
            binding: "required,min=1,max=512"
        commonAccess:
          type: string
          example: private
          maxLength: 20
          minLength: 1
          x-oapi-codegen-extra-tags:
            binding: "required,oneof=private public"
        email:
          $ref: '#/components/schemas/Email'
        userTags:
          $ref: '#/components/schemas/UserTags'
        systemTags:
          $ref: '#/components/schemas/SystemTags'
      required:
        - systemTags
        - userTags
        - email
        - name
        - commonAccess
    UserGet:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            userId:
              type: integer
              format: int64
            created:
              $ref: '#/components/schemas/Created'
            version:
              type: integer
              format: int64
          required:
            - userId
            - created
            - version
paths:
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          $ref: '#/components/responses/UserGetOk'
    patch:
      summary: Patches a user
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        $ref: '#/components/requestBodies/Patch'
      responses:
        '200':
          $ref: '#/components/responses/UserGetOk'

  /users:
    post:
      summary: Creates a new user or updates a user.
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          $ref: '#/components/responses/UserPostOk'
        '200':
          $ref: '#/components/responses/UserPostOk'

