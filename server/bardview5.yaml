openapi: 3.0.3
# oapi-codegen -o bardview5.go -generate types bardview5.yaml
info:
  title: BardView5
  description: BardView5
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: localhost!
components:
  schemas:
    StringId:
      type: string
      maxLength: 27
      minLength: 27
      example: 0ujsswThIGTUYm2K8FjOOfXtY1K
      title: String Id
      readOnly: true
      description: A 27 character string representing an unique id
    LastModified:
      type: string
      format: datetime
      readOnly: true
      description: The last modified time of this record
      title: LastModified
    Email:
      type: string
      format: email
      minLength: 1
      maxLength: 512
      example: test@test.com
    SystemTags:
      type: array
      maxItems: 64
      items:
        type: string
        maxLength: 256
        example: Player
    UserTags:
      type: array
      maxItems: 64
      items:
        type: string
        maxLength: 256
        example: LookingForPlayers
    User:
      type: object
      properties:
        name:
          type: string
          example: Arthur Dent
          maxLength: 512
          minLength: 1
          x-oapi-codegen-extra-tags:
            validate: "required,min=1,max=512"
        email:
          $ref: '#/components/schemas/Email'
        userTags:
          $ref: '#/components/schemas/UserTags'
        systemTags:
          $ref: '#/components/schemas/SystemTags'
      required:
        - systemTags
        - userTags
        - email
        - name
    UserGet:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            userId:
              $ref: '#/components/schemas/StringId'
            lastModified:
              $ref: '#/components/schemas/LastModified'
          required:
            - userId
            - lastModified
    UserPatch:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            userId:
              $ref: '#/components/schemas/StringId'
          required:
            - userId
paths:
  /users/{userId}:
    get:
      summary: Returns a user by ID.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            $ref: '#/components/schemas/StringId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGet'
  /users:
    post:
      summary: Creates a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'      # <-------
      responses:
        '201':
          description: Created